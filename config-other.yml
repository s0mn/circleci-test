version: 2.1

references:
  restore_dep_cache: &restore_dep_cache
    restore_cache:
      keys:
        - v1-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
  container_config: &container_config
    docker:
      - image: circleci/node:10
  restore_gz: &restore_gz
    restore_cache:
      keys:
        - build-artifact
  base_filter: &base_filter
    filters:
      tags:
        only: /^.*/
  tag_filter: &tag_filter
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^.*/

orbs:
  aws-cli: circleci/aws-cli@0.1.13

commands:
  config_aws:
    description: "Configure AWS"
    steps:
      - run:
          name: Configure AWS
          command: |
            if [[ $CIRCLE_BRANCH != "development" && $CIRCLE_BRANCH != "master" && $CIRCLE_BRANCH != "test" && $CIRCLE_BRANCH != "uat" ]]; then KEYENV=DEVELOPMENT && BRANCH=development; elif [[ $CIRCLE_BRANCH == "master" ]]; then KEYENV=PRODUCTION && BRANCH=production; else KEYENV=$( echo $CIRCLE_BRANCH | tr "[:lower:]" "[:upper:]" ) && BRANCH=$CIRCLE_BRANCH; fi
            if [[ $CIRCLE_BRANCH == "master" ]]; then export CIRCLE_LD_KEY=$PROD_LD_SDK_KEY; else export CIRCLE_LD_KEY=$TEST_LD_SDK_KEY; fi
            ACCESS_KEY="AWS_ACCESS_KEY_ID_$KEYENV"
            SECRET_KEY="AWS_SECRET_ACCESS_KEY_$KEYENV"
            aws configure set aws_access_key_id "${!ACCESS_KEY}" --profile default
            aws configure set aws_secret_access_key "${!SECRET_KEY}" --profile default
            aws configure set region us-east-1 --profile default
  sync:
    description: "Sync to S3"
    steps:
      - run:
          name: Sync to S3
          command: |
            if [[ $CIRCLE_BRANCH != "development" && $CIRCLE_BRANCH != "master" && $CIRCLE_BRANCH != "test" && $CIRCLE_BRANCH != "uat" ]]; then KEYENV=DEVELOPMENT && BRANCH=development; elif [[ $CIRCLE_BRANCH == "master" ]]; then KEYENV=PRODUCTION && BRANCH=production; else KEYENV=$( echo $CIRCLE_BRANCH | tr "[:lower:]" "[:upper:]" ) && BRANCH=$CIRCLE_BRANCH; fi
            aws s3api put-object --key $CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.zip --body ./$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.zip --bucket atom-shield-build-artifacts-$BRANCH-us-east-1

  deploy_lambda:
    description: "Deploy Lambda"
    steps:
      - run:
          name: Deploy Lambda
          command: |
            if [[ $CIRCLE_BRANCH != "development" && $CIRCLE_BRANCH != "master" && $CIRCLE_BRANCH != "test" && $CIRCLE_BRANCH != "uat" ]]; then KEYENV=DEVELOPMENT && BRANCH=development; elif [[ $CIRCLE_BRANCH == "master" ]]; then KEYENV=PRODUCTION && BRANCH=production; else KEYENV=$( echo $CIRCLE_BRANCH | tr "[:lower:]" "[:upper:]" ) && BRANCH=$CIRCLE_BRANCH; fi
            if [[ $CIRCLE_BRANCH == "master" ]]; then export CIRCLE_LD_KEY=$PROD_LD_SDK_KEY; else export CIRCLE_LD_KEY=$TEST_LD_SDK_KEY; fi
            aws lambda update-function-configuration --function-name $CIRCLE_PROJECT_REPONAME-$BRANCH --environment Variables="{LAUNCHDARKLY_KEY=$CIRCLE_LD_KEY,ENVIRONMENT=$BRANCH,NODE_ENV=$BRANCH}"       
            aws lambda update-function-code --function-name $CIRCLE_PROJECT_REPONAME-$BRANCH --s3-bucket atom-shield-build-artifacts-$BRANCH-us-east-1 --s3-key $CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.zip
            aws lambda publish-version --function-name $CIRCLE_PROJECT_REPONAME-$BRANCH
            aws lambda update-alias --function-name $CIRCLE_PROJECT_REPONAME-$BRANCH --name "live" --function-version '$LATEST'

jobs:
  dependencies:
    <<: *container_config
    steps:
      - checkout
      - *restore_dep_cache
      - run:
          name: Install dependencies
          command: |
            curl -u $npmuser:$npmpassword $npmauthurl >> .npmrc
            echo "registry = $npmregistry" >> .npmrc
            npm install
      - save_cache:
          key: v1-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ~/.npm
  build:
    <<: *container_config
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            curl -u $npmuser:$npmpassword $npmauthurl >> /home/circleci/.npmrc
            echo "registry = $npmregistry" >> /home/circleci/.npmrc
            cd ~/project
            npm install
            sudo chown -R circleci:circleci /usr/local
            npm install -g atom-lambda-deployer
            npm install -g parcel-bundler
            lambo build -m && AWS_XRAY_TRACING_NAME=atom-launcher
      - run:
          name: Compress
          command: zip -j $CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.zip ./dist/*
      - persist_to_workspace:
          root: .
          paths:
            - ./*
  sync:
    <<: *container_config
    executor: aws-cli/default
    steps:
      - aws-cli/install
      - attach_workspace:
          at: .
      - config_aws
      - sync

  deploy:
    <<: *container_config
    executor: aws-cli/default
    steps:
      - aws-cli/install
      - config_aws
      - deploy_lambda
 
workflows:
  version: 2
  default-workflow:
    jobs:
      - dependencies:
          context: atom-artifactory
      - build:
          requires:
            - dependencies
          context: atom-artifactory
          <<: *base_filter
      - sync:
          requires:
            - build
          <<: *base_filter
      - deploy:
          requires:
            - sync
          <<: *base_filter
